"""v1-governance-tables

Revision ID: e8bba5c4557b
Revises: 1b08dc73d5f3
Create Date: 2022-05-18 10:20:46.655412

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "e8bba5c4557b"
down_revision = "1b08dc73d5f3"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "schema_template",
        sa.Column(
            "schema_template_id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("tags", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("attributes", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("tenant_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("schema_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column("imported", sa.Boolean(), nullable=False),
        sa.Column("state", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("version", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("schema_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("transaction_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenant.id"],
        ),
        sa.PrimaryKeyConstraint("schema_template_id"),
        sa.UniqueConstraint("tenant_id", "schema_id"),
    )
    op.create_index(
        op.f("ix_schema_template_schema_id"),
        "schema_template",
        ["schema_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_schema_template_tenant_id"),
        "schema_template",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "credential_template",
        sa.Column(
            "credential_template_id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("tags", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("attributes", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("tenant_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("schema_template_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("cred_def_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("schema_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("state", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column("transaction_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("tag", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("revocation_enabled", sa.Boolean(), nullable=False),
        sa.Column("revocation_registry_size", sa.Integer(), nullable=True),
        sa.Column(
            "revocation_registry_state",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["schema_template_id"],
            ["schema_template.schema_template_id"],
        ),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenant.id"],
        ),
        sa.PrimaryKeyConstraint("credential_template_id"),
    )
    op.create_index(
        op.f("ix_credential_template_cred_def_id"),
        "credential_template",
        ["cred_def_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_credential_template_schema_template_id"),
        "credential_template",
        ["schema_template_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_credential_template_tenant_id"),
        "credential_template",
        ["tenant_id"],
        unique=False,
    )
    op.create_table(
        "issued_credential",
        sa.Column(
            "issued_credential_id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("tags", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("credential_preview", sa.JSON(), nullable=True),
        sa.Column("credential_exchange", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "credential_template_id", sqlmodel.sql.sqltypes.GUID(), nullable=False
        ),
        sa.Column("tenant_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("cred_def_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "external_reference_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("revoked", sa.Boolean(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "revocation_comment", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("state", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("rev_reg_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("cred_rev_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["credential_template_id"],
            ["credential_template.credential_template_id"],
        ),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenant.id"],
        ),
        sa.PrimaryKeyConstraint("issued_credential_id"),
    )
    op.create_index(
        op.f("ix_issued_credential_cred_def_id"),
        "issued_credential",
        ["cred_def_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_issued_credential_credential_template_id"),
        "issued_credential",
        ["credential_template_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_issued_credential_tenant_id"),
        "issued_credential",
        ["tenant_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_issued_credential_tenant_id"), table_name="issued_credential"
    )
    op.drop_index(
        op.f("ix_issued_credential_credential_template_id"),
        table_name="issued_credential",
    )
    op.drop_index(
        op.f("ix_issued_credential_cred_def_id"), table_name="issued_credential"
    )
    op.drop_table("issued_credential")
    op.drop_index(
        op.f("ix_credential_template_tenant_id"), table_name="credential_template"
    )
    op.drop_index(
        op.f("ix_credential_template_schema_template_id"),
        table_name="credential_template",
    )
    op.drop_index(
        op.f("ix_credential_template_cred_def_id"), table_name="credential_template"
    )
    op.drop_table("credential_template")
    op.drop_index(op.f("ix_schema_template_tenant_id"), table_name="schema_template")
    op.drop_index(op.f("ix_schema_template_schema_id"), table_name="schema_template")
    op.drop_table("schema_template")
    # ### end Alembic commands ###
