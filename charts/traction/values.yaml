# Default values for helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:

  # -- Domain suffix to be used for default hostpaths in ingress
  # override in different environments, or for each app
  # --set global.ingressSuffix
  ingressSuffix: -prod.apps.silver.devops.gov.bc.ca

  persistence:
    # -- If true, the Postgres chart is deployed
    deployPostgres: true

  # -- The used ledger. Will be used for default values.
  ledger: bcovrin-test

  nsp:
    enabled: false

nameOverride: ""
fullnameOverride: ""

acapy:
  image:
    repository: ghcr.io/bcgov/traction-plugins-acapy
    pullPolicy: IfNotPresent
    # --  Overrides the image tag whose default is the chart appVersion.
    # tag: 0.2.14
  imagePullSecrets: []

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
    name: ""

  # Ignored if autoscaling is enabled
  replicaCount: 1

  # The agent seed, 32 characters. Will be generated if not defined here
  agentSeed: ""

  labelOverride: ""

  readOnlyMode: false

  ## AcaPy Configuration file
  #
  argfile.yml:
    auto-accept-invites: true
    auto-accept-requests: true
    auto-create-revocation-transactions: true
    auto-ping-connection: true
    auto-promote-author-did: true
    auto-provision: true
    auto-request-endorsement: true
    auto-respond-credential-offer: false
    auto-respond-credential-proposal: false
    auto-respond-credential-request: true
    auto-respond-messages: true
    auto-respond-presentation-proposal: true
    auto-respond-presentation-request: false
    auto-store-credential: true
    auto-verify-presentation: true
    auto-write-transactions: true
    emit-new-didcomm-mime-type: true
    emit-new-didcomm-prefix: true
    endorser-role: author
    endorser-alias: endorser
    endorser-public-did: 'UjmxKBZe1qv1NBE7GaohdP'
    genesis-url: '{{ include "traction.genesisUrl" . }}'
    label: '{{ include "acapy.label" .}}'
    log-level: info
    monitor-ping: true
    monitor-revocation-notification: true
    multitenant-admin: true
    multitenant: true
    notify-revocation: true
    preserve-exchange-records: true
    public-invites: true
    read-only-ledger: false
    tails-server-base-url: '{{ include "acapy.tails.baseUrl" . }}'
    tails-server-upload-url: '{{ include "acapy.tails.uploadUrl" . }}'
    wallet-name: askar-wallet
    wallet-storage-type: postgres_storage
    wallet-type: askar-profile

  ## Wallet storage configuration
  #  Specifies the storage configuration to use for the wallet. 
  #  This is required if you are for using 'postgres_storage' wallet 'storage type. 
  #  For example, '{"url":"localhost:5432", "wallet_scheme":"MultiWalletSingleTable"}'.
  #  This configuration maps to the indy sdk postgres plugin (PostgresConfig).
  #
  walletStorageConfig:
    # Raw json, if uncommented, other values will be ignored
    # json: '{"url":"localhost:5432", "max_connections":"10", "wallet_scheme":"DatabasePerWallet"}'
    # Database url, uncomment only if you need to use own, external database
    # this is set automatically when used with postgresql/-ha subchart
    # url: postgresql:5432
    # Client max_connections, defaults to 10
    max_connections: 10
    # Wallet scheme
    wallet_scheme: DatabasePerWallet

  ## Wallet storage credentials
  #  Specifies the storage credentials to use for the wallet.
  #  This is required if you are for using 'postgres_storage' wallet 'storage type.
  #  For example, '{"account":"postgres","password":"mysecretpassword","admin_account":"postgres","admin_password":"mysecretpassword"}'.
  #  This configuration maps to the indy sdk postgres plugin (PostgresCredential).
  #  NOTE: admin_user must have the CREATEDB role or else initialization will fail.
  #
  # Uncomment only if you need to use own database and wallet storage credentials
  walletStorageCredentials:
    # Raw json, if uncommented, other values will be ignored
    # json: '{"account":"postgres","password":"mysecretpassword","admin_account":"postgres","admin_password":"mysecretpassword"}'
    # Database account
    # account: postgres
    # Database password
    # password: password
    # Database admin account
    admin_account: postgres
    # Database admin password
    # admin_password: password
    # Overrides the otherwise generated secret for the database credentials, provided secret must contain the keys 'database-user', 'database-password', 'password-password'
    existingSecret: ""

  ## Plugins
  #
  # list the plugins on our image we want to enable.
  plugins:
    basicmessageStorage: true
    connectionUpdate: true
    multitenantProvider: true
    tractionInnkeeper: true
  # Plugin configuration file
  #
  plugin-config.yml:
    multitenant_provider:
      manager:
        class_name: traction_plugins.multitenant_provider.v1_0.manager.AskarMultitokenMultitenantManager
        always_check_provided_wallet_key: true
      errors:
        on_unneeded_wallet_key: false
      token_expiry:
        units: days
        amount: 1
    traction_innkeeper:
      innkeeper_wallet:
        wallet_name: traction_innkeeper
        print_key: false
        print_token: false
      reservation:
        expiry_minutes: 2880
        auto_approve:  false
  
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 600m
      memory: 2600Mi
    requests:
      cpu: 300m
      memory: 1300Mi

  podAnnotations: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1001

  service:
    type: ClusterIP
    adminPort: 8031
    httpPort: 8030
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}
  tolerations: []
  affinity: {}

  networkPolicy:
    enabled: true
    ingress:
      enabled: true
      namespaceSelector:
        network.openshift.io/policy-group: ingress
      podSelector: {}
    namespaceSelector: {}

  openshift:
    route:
      enabled: true
      path: "/"
      targetPort: http
      timeout: 2m
      tls:
        enabled: true
        insecureEdgeTerminationPolicy: None
        termination: edge
      wildcardPolicy: None
    adminRoute:
      enabled: true
      path: "/"
      targetPort: admin
      timeout: 2m
      tls:
        enabled: true
        insecureEdgeTerminationPolicy: None
        termination: edge
      wildcardPolicy: None

  tails:
    # -- Set to true to enable revocation (external tails server required)
    enabled: true

    # -- Override the otherwise ledger-specifically generated base URL of the external tails server
    baseUrlOverride: ""

    # -- Override the otherwise ledger-specifically generated upload URL of the external tails server
    uploadUrlOverride: ""

  secret:
    adminurl:
      # set to false and provide a value to "hardcode" the password value
      generated: true
      value: "change-me"
    pluginInnkeeper:
      generated: true
      walletkey: "change-me"
      tenantid: "innkeeper"

traction:
  config:
    ledger:
      browserUrlOverride: ""
      genesisUrlOverride: ""

tenant_proxy:
  image:
    repository: ghcr.io/bcgov/traction-tenant-proxy
    pullPolicy: IfNotPresent
    # --  Overrides the image tag whose default is the chart appVersion.
    # tag: 0.2.14

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: false
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
    name: ""

  imagePullSecrets: []

  # Ignored if autoscaling is enabled
  replicaCount: 1

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8032

  openshift:
    route:
      enabled: true
      path: "/"
      targetPort: http
      timeout: 2m
      tls:
        enabled: true
        insecureEdgeTerminationPolicy: None
        termination: edge
      wildcardPolicy: None

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 20m
      memory: 100Mi
    requests:
      cpu: 10m
      memory: 50Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  networkPolicy:
    enabled: true
    ingress:
      enabled: true
      namespaceSelector:
        network.openshift.io/policy-group: ingress
      podSelector: {}
    namespaceSelector: {}

  tolerations: []

  affinity: {}

# Create ingress resource for Acapy and Tenant Proxy
ingress:
  enabled: true
  className: ""
  annotations:
    route.openshift.io/termination: edge
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

postgresql:
  # when overriding global.fullnameOverride, you must override this to match.
  fullnameOverride: ""

  auth:
    existingSecret: '{{ include "global.fullname" . }}'
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: database-password
    # -- PostgreSQL Database to create.
    database: traction
    username: acapy

  # --  PostgreSQL service configuration
  service:
    ports:
      postgresql: 5432

  primary:
    # --  Persistent Volume Storage configuration. ref: https://kubernetes.io/docs/user-guide/persistent-volumes
    persistence:
      enabled: true
      size: 1Gi

    # -- add securityContext (fsGroup, runAsUser). These need to be false for Openshift 4
    securityContext:
      enabled: false
    containerSecurityContext:
      enabled: false
    podSecurityContext:
      enabled: false

    resources:
      limits:
        cpu: 600m
        memory: 2600Mi
      requests:
        cpu: 300m
        memory: 1300Mi

    # --  Increase max_connections to support higher workloads
    extendedConfiguration: |
      max_connections = 500;
