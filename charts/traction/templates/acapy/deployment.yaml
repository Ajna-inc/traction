{{- $acapyLabel := include "acapy.label" . -}}
{{- $globalName := include "global.name"  . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "acapy.fullname" . }}
  labels:
    {{- include "acapy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.acapy.autoscaling.enabled }}
  replicas: {{ .Values.acapy.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "acapy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
    {{- with .Values.acapy.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "acapy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.acapy.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "acapy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.acapy.podSecurityContext | nindent 8 }}
      containers:
        - name: acapy
          securityContext:
            {{- toYaml .Values.acapy.securityContext | nindent 12 }}
          image: "{{ .Values.acapy.image.repository }}:{{ .Values.acapy.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.acapy.image.pullPolicy }}
          command:
          - /bin/bash
          args: [
           "-c",
           "{{ include "acapy.registerLedger" . }} \
           sleep 30; \
           aca-py start \
           --inbound-transport http '0.0.0.0' {{ .Values.acapy.service.httpPort }} \
           --outbound-transport http \
           --admin '0.0.0.0' {{ .Values.acapy.service.adminPort }} \
           --endpoint https://{{ include "acapy.host" . }} \
           --arg-file '/home/indy/argfile.yml' \
           --wallet-storage-config '{\"url\":\"{{ include "global.postgresql.fullname" . }}:{{ .Values.postgresql.service.ports.postgresql }}\",\"max_connections\":5, \"wallet_scheme\":\"{{ .Values.acapy.walletScheme }}\"}' \
           --wallet-storage-creds '{\"account\":\"{{ .Values.postgresql.auth.username }}\",\"password\":\"$(POSTGRES_PASSWORD)\",\"admin_account\":\"postgres\",\"admin_password\":\"$(POSTGRES_POSTGRES_PASSWORD)\"}' \
           --plugin 'aries_cloudagent.messaging.jsonld' \ 
           {{- if .Values.acapy.plugins.tractionInnkeeper }}
           --plugin traction_plugins.traction_innkeeper.v1_0 \
           --plugin-config-value traction_innkeeper.innkeeper_wallet.tenant_id=\"$(INNKEEPER_WALLET_TENANT_ID)\" \
           --plugin-config-value traction_innkeeper.innkeeper_wallet.wallet_key=\"$(INNKEEPER_WALLET_WALLET_KEY)\" \
           {{- end }}
           {{- if .Values.acapy.plugins.basicmessageStorage }}
           --plugin traction_plugins.basicmessage_storage.v1_0 \
           {{- end }}
           {{- if .Values.acapy.plugins.connectionUpdate }}
           --plugin traction_plugins.connection_update.v1_0 \
           {{- end }}
           {{- if .Values.acapy.plugins.multitenantProvider }}
           --plugin traction_plugins.multitenant_provider.v1_0 \
           {{- end }}           
           "
          ]
          ports:
            - name: http
              containerPort: {{ .Values.acapy.service.httpPort }}
              protocol: TCP
            - name: admin
              containerPort: {{ .Values.acapy.service.adminPort }}
              protocol: TCP
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.database.secret.name" . }}
                  key: {{ .Values.postgresql.auth.secretKeys.userPasswordKey }}
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.database.secret.name" . }}
                  key: {{ .Values.postgresql.auth.secretKeys.adminPasswordKey }}
            - name: WEBHOOK_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.api.secret.name" . }}
                  key: webhookapi
            - name: INNKEEPER_WALLET_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.plugin.innkeeper.name" . }}
                  key: tenantid
            - name: INNKEEPER_WALLET_WALLET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.plugin.innkeeper.name" . }}
                  key: walletkey
            - name: ACAPY_WALLET_SEED
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.fullname" . }}
                  key: seed
            - name: ACAPY_WALLET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.walletkey.secret.name" . }}
                  key: walletKey
            - name: ACAPY_MULTITENANT_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.api.secret.name" . }}
                  key: jwt
            - name: ACAPY_ADMIN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.api.secret.name" . }}
                  key: adminurl
            - name: ACAPY_PLUGIN_CONFIG
              value: 'plugin-config.yml'
          readinessProbe:
            httpGet:
              path: /status/ready
              port: {{ .Values.acapy.service.adminPort }}
            initialDelaySeconds: 60
            periodSeconds: 10    
          livenessProbe:
            httpGet:
              path: /status/live
              port: {{ .Values.acapy.service.adminPort }}
            initialDelaySeconds: 90
            periodSeconds: 10 
          volumeMounts:
          - name: config
            mountPath: "/home/indy/argfile.yml"
            subPath: "argfile.yml"
            readOnly: true
          - name: config
            mountPath: "/home/indy/plugin-config.yml"
            subPath: "plugin-config.yml"
            readOnly: true
          resources:
            {{- toYaml .Values.acapy.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "acapy.fullname" . }}-config
            items:
            - key: "plugin-config.yml"
              path: "plugin-config.yml"
      {{- with .Values.acapy.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.acapy.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.acapy.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
