label: multitenant-tokens-plugin

# Admin
admin: [0.0.0.0, 3001]
admin-insecure-mode: false
admin-api-key: change-me

# Transport
inbound-transport:
  - [http, 0.0.0.0, 3000]
  - [ws, 0.0.0.0, 3002]
outbound-transport: http
endpoint:
  - http://localhost:3000

# plugins
plugin:
  - multitenant_provider.v1_0

# this is the default value (which manager class we want to load)...
plugin-config-value:
  # default configuration...
  # - multitenant_provider.manager.class_name="multitenant_provider.v1_0.manager.BasicMultitokenMultitenantManager"
  # - multitenant_provider.errors.on_unneeded_wallet_key=true
  # - multitenant_provider.token_expiry.units=weeks
  # - multitenant_provider.token_expiry.amount=52
  # when wallet_type = indy, default configuration will be...
  # - multitenant_provider.manager.class_name="multitenant_provider.v1_0.manager.BasicMultitokenMultitenantManager"
  # when wallet_type = askar, default configuration will be...
  - multitenant_provider.manager.class_name="multitenant_provider.v1_0.manager.AskarMultitokenMultitenantManager"
  # do we throw an error if managed wallet provides wallet_key when getting a token? true/false
  - multitenant_provider.errors.on_unneeded_wallet_key=false
  # how long tokens are valid, provide units (weeks, days, hours, minutes) and amount (integer)
  - multitenant_provider.token_expiry.units=days
  - multitenant_provider.token_expiry.amount=1

#config 
genesis-url: https://indy.igrant.io/genesis
# read-only-ledger: true
# no-ledger: true

# Multi-tenancy
# multitenancy is required to use this plugin...
multitenant: true
jwt-secret: insecure-jwt-secret
multitenant-admin: true


# Wallet
wallet-name: default
# wallet-type: indy
wallet-type: askar
wallet-key: "insecure, for use in demo only"
auto-provision: true

log-level: info