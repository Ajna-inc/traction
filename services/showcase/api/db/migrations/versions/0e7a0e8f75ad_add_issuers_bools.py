"""add issuers bools

Revision ID: 0e7a0e8f75ad
Revises: 3449c639cdbd
Create Date: 2022-02-25 19:22:56.487174

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0e7a0e8f75ad"
down_revision = "3449c639cdbd"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "outofband", "sender_id", existing_type=postgresql.UUID(), nullable=True
    )
    op.alter_column(
        "outofband", "recipient_id", existing_type=postgresql.UUID(), nullable=True
    )
    op.alter_column(
        "outofband", "sandbox_id", existing_type=postgresql.UUID(), nullable=True
    )
    op.alter_column(
        "student", "sandbox_id", existing_type=postgresql.UUID(), nullable=True
    )
    op.drop_constraint("student_name_sandbox_id_key", "student", type_="unique")
    op.create_index(op.f("ix_student_name"), "student", ["name"], unique=False)
    op.add_column(
        "tenant",
        sa.Column("issuer_enabled", sa.Boolean(), nullable=False, default=False),
    )
    op.add_column(
        "tenant",
        sa.Column("issuer_schema_success", sa.Boolean(), nullable=False, default=False),
    )
    op.add_column(
        "tenant",
        sa.Column(
            "issuer_cred_def_success", sa.Boolean(), nullable=False, default=False
        ),
    )
    op.alter_column(
        "tenant", "sandbox_id", existing_type=postgresql.UUID(), nullable=True
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "tenant", "sandbox_id", existing_type=postgresql.UUID(), nullable=False
    )
    op.drop_column("tenant", "issuer_cred_def_success")
    op.drop_column("tenant", "issuer_schema_success")
    op.drop_column("tenant", "issuer_enabled")
    op.drop_index(op.f("ix_student_name"), table_name="student")
    op.create_unique_constraint(
        "student_name_sandbox_id_key", "student", ["name", "sandbox_id"]
    )
    op.alter_column(
        "student", "sandbox_id", existing_type=postgresql.UUID(), nullable=False
    )
    op.alter_column(
        "outofband", "sandbox_id", existing_type=postgresql.UUID(), nullable=False
    )
    op.alter_column(
        "outofband", "recipient_id", existing_type=postgresql.UUID(), nullable=False
    )
    op.alter_column(
        "outofband", "sender_id", existing_type=postgresql.UUID(), nullable=False
    )
    # ### end Alembic commands ###
